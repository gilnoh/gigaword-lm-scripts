
=== 
Full calculation on files 
2009 May AFP data (20k documents) 
(Westy, under some load) 
8 threads: 1 min 35
6 threads: 1 min 18 
4 threads: 1 min 20 
2 threads: 1 min 53 
1 thread: 3 min 19 

(Gillespie, under some load) 
6 threads: 0 min 50  (cool) 

=== 
Full calculation on files 
2010 AFP data (186k documents) 

(Westy) 
2 threads: 2273 sec 
4 threads: 1848 sec
6 threads: 2380 sec
8 threads: (too slow. more than 5000 sec. Stuck.) 

(Gillespie) 
2 threads: 3676 sec  
4 threads: 2681 sec
6 threads: 2899 sec 
8 threads: 3231 sec 


==== 
Some more test --- indexed (cz random access test?) case without reordering 
On this result gillespie is so very slow! (x10 times). 
Why? --- "random access?", or "i-node order access"? 

(Westy on 2009 + 2010 AFP data, approximated with top 1000 hits) 
2 threads: 


(Gillespie on 2010 AFP data, approximated with top 1000 hits) 
2 threads: 


====
Some more test --- indexed case *with* reordering (alphabetic order) 

(Westy 09+10) 2 threads (uganda example) 
without reordering: 684 sec 
with reordering: 663 sec 
-20 seconds. hmm. not bad, but somethign else is in problem. I suppose.

(Gillespie afp 10) 2 threads (uganda example) 
without reordering: 419 sec 
with reordering: 404 sec 
- again, 15 seconds. something, but not enough. hopefully, broken down gzset would result better! 



