(devel Memo for PPL runner scripts. permanent memos should go to memo.org ) 

** DONE clean condprob code
 
** DONE finish multiple sentence PPL checking (lost code) 

** DONE work on ppl_t and ppl_h_given_t 
*** result is now as condprob_h_given_h 
-  [writing on condprob.pm] PPL oriented P(b|a) 
*** PPL_X(text, context) needs to return 
- length of the text: two numbers: count nonOOV words, count sentence. 
- probability: P_col(text), P_model(text), P_model(text | context) 
- Maybe also ppl? but this can be easily get by calc_ppl(logprob, nonOOV, count_sent). 
- well, but maybe: PPL_col (text), PPL_model(text), PPL_conditioned_model(text | context)  

** DONE check new method works Okay 
- compare same sentence with old method. write down output values and check the same. 
- also check the collection value output is the same, with SRILM value. 


** TODO work on PPL runner 
*** DONE main outline 
*** DONE continue work on ppl_one_doc 
*** TODO expand it to work on multiple files (arguments) 

** TODO some preliminary testing with existing test (football) 
*** DONE check first_one concurs with SRILM output itself (surely, but) 
*** TODO prev-2, prev-3  
*** TODO window-1, window-2, window-3, 
*** TODO prev 1, window-1,  with "content-include-context ON". 
*** TODO all_else 
*** TODO what about, "context include content?" maybe better. 
- probably much better. ... different conditioning. 
- compare this; for general tendency --- coll, model, cdnd-model 

** TODO some more preliminary testing with something else. (nyt) 
- use all_afp 
- get some random news from nyt. 



** PPL runner systemically; design. 
*** TODO how to choose? one session about experiment design. 


* SOME checks to run 
** Sanity check of PPL sum on document level. 
*** TODO compare PPL sum of collection over the sentences and ngram ppl output itself. 
- when PPL_X(text,context) is completed with its PPL for the doc. 


* ppl_sum: the equation: of getting multiple per-word-ppl of sentences to get per-word-ppl of the doc. 
- equation 
10^SUM where SUM is:  
(part_a_len  / total_len) * log10 ppl_a + ... + (part_n_len / total_len) * log10 ppl_n 
- note that it is base10, due to the fact we are using SRILM based numbers. 
- note really needed... just sum logprob, and calc_ppl(logprob, countNonOOV, countSent)


* Different way of giving context 
- just previous sentence 
- all previous sentences 
- previous two sentences 
- prev+3, next+3 sentences 
- all other sentences within document (other than this) 







